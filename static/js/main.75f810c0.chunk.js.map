{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","setState","event","description","props","className","Row","Col","md","Card","Title","summary","Subtitle","creator","email","Text","start","dateTime","location","Button","variant","onClick","showText","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","numberDisplayed","Form","Label","type","onChange","onFocus","style","display","NumberOfEvents","updateNumberOfEvents","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","data","localStorage","setItem","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","currentCity","locationEvents","mounted","slice","number","e","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","atatus","install"],"mappings":"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","file":"static/js/main.75f810c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Event extends Component {\r\n\r\n  state = {\r\n    showMore: false\r\n  }\r\n\r\n  showMore() {\r\n    this.setState({ showMore: !this.state.showMore });\r\n  }\r\n\r\n  showText() {\r\n    return this.state.showMore ? \"Hide Event Details\" : \"Show Event Details\";\r\n  }\r\n\r\n  description(event) {\r\n    return this.state.showMore ? event.description : \"\";\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      < div className=\"event mb-2\" >\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={12}>\r\n            <Card>\r\n              <Card.Title>{event.summary}</Card.Title>\r\n              <Card.Subtitle><b>Creator: </b>{event.creator.email}</Card.Subtitle>\r\n              <Card.Text><b>Start Time: </b>{event.start.dateTime}</Card.Text>\r\n              <Card.Text><b>Location: </b>{event.location}</Card.Text>\r\n              {this.state.showMore === true && (\r\n                <Card.Text className=\"EventDetails\">{this.description(event)}</Card.Text>\r\n              )}\r\n              <br />\r\n\r\n\r\n              <Button variant=\"primary\" className=\"details-btn\" onClick={() => { this.showMore() }}>{this.showText()}</Button>\r\n\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <div>\r\n        <h3>Upcoming Events: </h3>\r\n        <ul className=\"EventList\">\r\n          {events.map(event =>\r\n            <li key={event.id}>\r\n              <Event event={event} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion, this.props.numberDisplayed);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <Form>\r\n          <Form.Label>Filter Events By City</Form.Label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"city\"\r\n            value={this.state.query}\r\n            onChange={this.handleInputChanged}\r\n            onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n          />\r\n          <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n            {this.state.suggestions.map((suggestion) => (\r\n              <li\r\n                className=\"matchSuggestion\"\r\n                key={suggestion}\r\n                onClick={() => this.handleItemClicked(suggestion)}\r\n              >{suggestion}</li>\r\n            ))}\r\n            <li\r\n              className=\"seeAll\"\r\n              key=\"all\"\r\n              onClick={() => { this.handleItemClicked(\"all\") }}>\r\n              <b>See all cities</b>\r\n            </li>\r\n          </ul>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberDisplayed: 32,\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      numberDisplayed: value,\r\n    });\r\n    this.props.updateNumberOfEvents(event.target.value);\r\n  };\r\n\r\n\r\n  render() {\r\n    const numberDisplayed = this.state.numberDisplayed;\r\n    return (\r\n      <Row>\r\n        <Col md={3}>\r\n          <div className=\"NumberOfEvents\">\r\n            <Form>\r\n              <Form.Label htmlFor=\"numberDisplayed\">Events Displayed/Page</Form.Label><br />\r\n              <input\r\n                type=\"number\"\r\n                className=\"event-number-input\"\r\n                value={numberDisplayed}\r\n                onChange={this.handleInputChanged} />\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockDataJSON = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n\r\n];\r\nconst mockData = JSON.parse(JSON.stringify(mockDataJSON)); //convert JSON string to JS\r\nexport { mockData };","// @param {*} events:\r\n//  The following function should be in the “api.js” file.\r\n//  This function takes an events array, then uses map to create a new array with only locations.\r\n//  It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n//  The Set will remove all duplicates from the array.\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://gtkmwuoeuc.execute-api.us-east-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://gtkmwuoeuc.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://gtkmwuoeuc.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './nprogress.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberDisplayed: 32,\r\n    currentCity: \"all\",\r\n  }\r\n\r\n  updateEvents = (location, numberDisplayed) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ? events\r\n        :\r\n        events.filter((event) => event.location === location);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents.slice(0, numberDisplayed),\r\n          currentCity: location,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateNumberOfEvents(number) {\r\n    this.setState({ numberDisplayed: number });\r\n    const { currentCity } = this.state;\r\n    this.updateEvents(currentCity, number);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { numberDisplayed } = this.state;\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: events.slice(0, numberDisplayed),\r\n          locations: extractLocations(events)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <h1>Meet Up</h1>\r\n\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n          updateNumberOfEvents={this.updateNumberOfEvents} />\r\n\r\n        <NumberOfEvents\r\n          updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)} />\r\n\r\n        <EventList\r\n          events={this.state.events} />\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\natatus.config('9ee9d281bc2f4fb1bb68acedbc083fc6').install();\r\n\r\n"],"sourceRoot":""}